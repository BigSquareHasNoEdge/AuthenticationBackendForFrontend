@page "/weather"
@using Backend.Contract.Weather

<PageTitle>Weather Origin</PageTitle>

<h1>Weather from Origin</h1>

<p>demonstrates the protected component fetching unprotected resource from the origin server.</p>
<p>
    Althouth the resource is unprotected, you cannot reach here before getting authrized by this app who is protecting this component.
</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th aria-label="Temperature in Celsius">Temp. (C)</th>
                <th aria-label="Temperature in Farenheit">Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private WeatherForecast[]? forecasts;
    private HttpClient Http = null!;

    [Inject]
    IHttpClientFactory hcFactory { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        Http = hcFactory.CreateClient("Origin");
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }
}
